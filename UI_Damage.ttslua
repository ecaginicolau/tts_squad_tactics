-- store the type of damage done by a player
damage_player = {}


function UI_damage_panel(player_color)
  damage_reset_color(player_color)
  local panel = {
    tag = "Panel",
    children = {},
    attributes =
    {
      id = "panel_damage_" .. player_color,
      visibility = player_color,
      active = false,
      height = 270,
      width = 750,
      allowDragging = "true",
      returnToOriginalPositionWhenReleased = "false",
      scale = "0.5 0.5 0.5",
      position = "0 0 0",
      color = "#AAAAAA"
    }
  }
  -- remove identation warning, it bugs me
  panel["children"][#panel["children"] + 1] = {
    tag = "Text",
    attributes =
    {
      text = "Damage",
      fontSize = 70,
      position = "-225 62 0"
    }
  }
  -- remove identation warning, it bugs me
  panel["children"][#panel["children"] + 1] = {
    tag = "InputField",
    attributes =
    {
      width = 175,
      height = 100,
      text = "0",
      fontSize = 70,
      position = "-263 -62 0"
    }
  }

  -- remove identation warning, it bugs me
  panel["children"][#panel["children"] + 1] = {
    tag = "Button",
    attributes =
    {
      text = "OK",
      fontSize = 60,
      width = 100,
      height = 100,
      position = "-105 -62 0"
    }
  }

  -- remove identation warning, it bugs me
  panel["children"][#panel["children"] + 1] = {
    tag = "Button",
    attributes =
    {
      id = "damage_impact_"..player_color,
      width = 100,
      height = 100,
      color = "#808080",
      icon = "impact2",
      tooltip = "Impact",
      iconColor = "#000000",
      position = "50 62 0",
      onClick = "UI_damage_type_click(impact)",
    }
  }

  -- remove identation warning, it bugs me
  panel["children"][#panel["children"] + 1] = {
    tag = "Button",
    attributes =
    {
      id = "damage_feu_"..player_color,
      width = 100,
      height = 100,
      icon = "feu",
      tooltip = "Feu",
      iconColor = "#801212",
      position = "175 62 0",
      onClick = "UI_damage_type_click(feu)",
    }
  }

  -- remove identation warning, it bugs me
  panel["children"][#panel["children"] + 1] = {
    tag = "Button",
    attributes =
    {
      id = "damage_froid_"..player_color,
      width = 100,
      height = 100,
      icon = "froid",
      tooltip = "Froid",
      iconColor = "#121280",
      position = "300 62 0",
      onClick = "UI_damage_type_click(froid)",
    }
  }

  -- remove identation warning, it bugs me
  panel["children"][#panel["children"] + 1] = {
    tag = "Button",
    attributes =
    {
      id = "damage_electrique_"..player_color,
      width = 100,
      height = 100,
      icon = "electrique",
      tooltip = "Electric",
      iconColor = "#AAAA12",
      position = "50 -62 0",
      onClick = "UI_damage_type_click(electrique)",
    }
  }

  -- remove identation warning, it bugs me
  panel["children"][#panel["children"] + 1] = {
    tag = "Button",
    attributes =
    {
      id = "damage_fleau_"..player_color,
      width = 100,
      height = 100,
      icon = "fleau",
      tooltip = "Fleau",
      iconColor = "#128012",
      position = "175 -62 0",
      onClick = "UI_damage_type_click(fleau)",
    }
  }

  -- remove identation warning, it bugs me
  panel["children"][#panel["children"] + 1] = {
    tag = "Button",
    attributes =
    {
      id = "damage_direct_"..player_color,
      width = 100,
      height = 100,
      icon = "penetrating",
      iconColor = "#000000",
      position = "300 -62 0",
      onClick = "UI_damage_type_click(direct)",
    }
  }


  return panel
end



function UI_damage_type_click(player, damage_type)
  if damage_type == "direct" then
    damage_player[player.color]["direct"] = not damage_player[player.color]["direct"]
    damage_player[player.color]["impact"] = not damage_player[player.color]["direct"]
    damage_player[player.color]["feu"] = false
    damage_player[player.color]["froid"] = false
    damage_player[player.color]["electrique"] = false
    damage_player[player.color]["fleau"] = false
  else
    damage_player[player.color]["direct"] = false
    damage_player[player.color][damage_type] = not damage_player[player.color][damage_type]
    local one_selected = false
    for _, damage_type in ipairs(list_damage) do
      one_selected = one_selected or damage_player[player.color][damage_type]
      -- tjrs pas de break bordel
    end
    if not one_selected then
      damage_player[player.color]["direct"] = true
    end
  end
  UI_damage_update(player.color)
end



function UI_damage_update(player_color)
  local selected_color = "#808080"
  local not_selected_color = "#FFFFFF"
  for _, damage_type in ipairs(list_damage) do
    -- print(damage_type)
    local id = "damage_"..damage_type.."_"..player_color
    -- print("id: " .. id)
    if damage_player[player_color][damage_type] then
      self.UI.setAttribute(id, "color", selected_color)
    else
      self.UI.setAttribute(id, "color", not_selected_color)
    end
  end
end


function UI_damage_character(player, guid)
  local player_color = player.color
  if damage_player[player_color]["guid"] ==  nil then
    damage_player[player_color]["guid"] =  guid
    self.UI.setAttribute("panel_damage_" .. player_color, "active", true)
  elseif damage_player[player_color]["guid"] ~= guid then
    damage_player[player_color]["guid"] =  guid
    self.UI.setAttribute("panel_damage_" .. player_color, "active", true)
  else
    damage_player[player_color]["guid"] =  nil
    self.UI.setAttribute("panel_damage_" .. player_color, "active", false)

  end
end

function damage_reset_round()
  -- Keey damage information, it could be easier
  for _, player in ipairs(Player.getPlayers()) do
    -- still reset any target
    damage_player[player.color]["guid"] =  nil
  end
end

function damage_reset_color(player_color)
  damage_player[player_color] = {
    guid = nil,
    damage = 0,
    impact = true,
    feu = false,
    froid = false,
    electrique = false,
    fleau = false,
    direct = false,
  }
end
